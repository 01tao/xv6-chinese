## 第六章
### 文件系统

文件系统的目的是组织和存储数据，典型的文件系统支持用户和程序间的数据共享，它也保证数据的持久化——重启之后仍然可用。

xv6的文件系统提供类似 Unix 的文件，文件描述符，目录和路经名（请参阅第零章），并且把数据存储到一块 IDE 磁盘上（请参阅第三章）。这个文件系统解决了几大难题：

* 该文件系统需要在磁盘上的数据结构来表示文件、目录树，这棵树用于标识每个文件用于存储数据的块以及磁盘上哪些区域是空闲的。
* 该文件系统必须支持错误恢复，也就是说，如果系统崩溃了（比如掉电了），文件系统必须在重启后仍能正常工作。问题在于一次系统崩溃可能打断一连串的更新操作，从而使得磁盘上的数据结构变得不一致（例如：有的块同时被标记为被使用和空闲）。
* 不同的进程可能同时操作文件系统，这种并行不能破坏文件系统的正常工作。
* 访问磁盘比访问内存要慢几个数量级，所以文件系统必须要维护一个内存内的 cache 用于缓存常被访问的块。

这一章的剩余内容将阐述 xv6 是如何解决这些问题的。

### 概述

xv6 文件系统的分6层实现，如图6-1所示。



